@use 'src/styles/constants' as c;
@use 'src/styles/mixins' as m;

@keyframes pop {
  0%,
  40%,
  100% {
    transform: translateY(0);
  }

  20% {
    transform: translateY(-8px);
  }
}

@keyframes roll {
  0% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(-1000px);
  }
}

@keyframes drop {
  0% {
    transform: translateY(-1000px);
  }

  100% {
    transform: translateY(0);
  }
}

.wrapper {
  @include m.flex(center, center, column);
  row-gap: 32px;
  height: 100vh;

  .title {
    color: c.$C_PRIMARY;

    > p {
      font-size: 40px;
      counter-increment: count;
      @for $i from 1 through 3 {
        &:nth-of-type(#{$i}) {
          .highlight {
            animation: pop 1s infinite;
            animation-delay: calc(0.1s * #{$i});
          }
        }
      }
    }

    > p + p {
      margin-top: 8px;
    }

    .highlight {
      display: inline-block;
      margin-right: 4px;
      font-size: 48px;
      $count: counter(count);
    }
  }

  .rolletWrapper {
    @include m.flex(flex-start, center, column);
    width: 300px;

    .top {
      @include m.flex(center, center, row);
      column-gap: 32px;
      width: 100%;
      height: 50px;
      background-color: c.$C_PRIMARY;
      border-bottom-right-radius: 6px;
      border-bottom-left-radius: 6px;
    }

    .body {
      @include m.flex(center, center, column);
      position: relative;
      z-index: 10;
      width: 85%;
      height: 200px;
      background-color: c.$C_PRIMARY;
      // border-right: 6px solid c.$C_PRIMARY;
      // border-left: 6px solid c.$C_PRIMARY;

      > p {
        @include m.fontB1;
        position: absolute;
        top: 12px;
        left: 50%;
        color: c.$C_WHITE;
        letter-spacing: 12px;
        transform: translateX(-45%);
      }

      .rolesWrapper {
        @include m.flex(space-between);
        width: 95%;
        height: 65%;
        background-color: c.$C_WHITE;

        .role {
          @include m.flex(flex-start, flex-start, column);
          @include m.fontH3;
          flex: 1 0 80px;
          height: 100%;
          overflow: hidden;
          color: c.$C_PRIMARY;

          .container {
            flex-shrink: 0;
            width: 100%;

            &:not(:has(.isSuccess)) {
              transform: translateY(20px);
            }

            &:has(.isSuccess) {
              transform: translateY(24px);
            }

            > p {
              @include m.flex(center, center, column);
              width: 100%;
              height: 90px;
              font-size: 20px;
              text-align: center;
            }
          }
        }

        .role:not(:last-child) {
          border-right: 4px solid c.$C_PRIMARY;
        }

        &.isActive {
          .role {
            @for $i from 1 through 3 {
              &:nth-of-type(#{$i}) > .container {
                animation: roll 0.2s linear infinite;
                animation-delay: calc(0.2s * #{$i});
              }
            }
          }
        }
      }

      .stick {
        position: absolute;
        right: 0;
        z-index: 0;
        width: 8px;
        height: 70px;
        cursor: pointer;
        background-color: c.$C_BLACK;
        border-radius: 0 0 6px 6px;
        transition: transform 0.5s linear;
        transform: rotate(45deg);
        transform-origin: bottom right;

        .handle {
          position: absolute;
          top: -18px;
          left: 50%;
          width: 20px;
          height: 20px;
          background-color: red;
          border-radius: 50%;
          transform: translateX(-50%);
        }

        &.isActive {
          user-select: none;
          transform: rotate(135deg) translateY(10px);
        }
      }
    }

    .bottom {
      width: 100%;
      height: 40px;
      background-color: c.$C_PRIMARY;
      border-top-left-radius: 6px;
      border-top-right-radius: 6px;
    }
  }
}
